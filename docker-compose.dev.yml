version: '3'

services:
  next-app:
    container_name: next-app
    build:
      context: .
      dockerfile: ./docker/dev.Dockerfile
    env_file:
      - .env
    environment:
      POSTGRES_ADDR: postgres
      POSTGRES_DATABASE: dbVacunacion
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DATABASE}?schema=public
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app/next-app
    restart: always
    ports:
      - 3000:3000
    command: >
      sh -c "
      bun install &&
      bun prisma generate &&
      bun run build &&
      bun start
      "

  postgres:
    image: postgres:15
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: dbVacunacion
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "dbVacunacion"]
      interval: 5s
      timeout: 10s
      retries: 5

volumes:
  pgdata: {}